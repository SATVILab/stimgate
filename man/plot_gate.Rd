% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_gate.R
\name{plot_gate}
\alias{plot_gate}
\title{Plot gate}
\usage{
plot_gate(
  ind,
  .data,
  path_project,
  marker,
  ind_lab = NULL,
  marker_lab = NULL,
  exc_min = TRUE,
  limits_expand = NULL,
  limits_equal = FALSE,
  grid = TRUE,
  grid_n_col = 2,
  show_gate = TRUE,
  min_cell = 10
)
}
\arguments{
\item{ind}{numeric vector. Specifies indices in \code{.data} to plot.}

\item{.data}{GatingSet. Same GatingSet passed to \code{stimgate_gate}.}

\item{path_project}{character. Path to the project directory used for \code{stimgate_gate}.}

\item{marker}{character vector of length one or two. Specifies markers (channels, really)
to be plotted. If only one is passed, then only univariate plots are created.}

\item{ind_lab}{named character vector.
Labels for \code{ind} used in plot.
Optional.}

\item{marker_lab}{named character vector.
Labels for \code{marker} used in plot.
Optional.}

\item{exc_min}{Logical.
If \code{TRUE}, excludes the minimum expression values when processing the data.
Default is \code{TRUE}.}

\item{limits_expand}{list.
Expand the limits of the plot axes.
Default is \code{NULL}.}

\item{limits_equal}{Logical.
If TRUE, forces equal lengths of the limits.}

\item{grid}{Logical.
If TRUE, arranges the resulting plots in a grid format
using \code{cowplot::plot_grid}.
Default is \code{TRUE}.}

\item{grid_n_col}{Integer.
Number of columns in grid layout.}

\item{show_gate}{Logical.
If \code{TRUE}, overlays gate lines on the plots.|>
Default is \code{TRUE}.}

\item{min_cell}{integer.
Minimum number of cells to be plotted.
Will skip plots with fewer cells.
Default is 10.}
}
\value{
A grid of plots if \code{grid} is TRUE, otherwise a list of ggplot objects.
}
\description{
Plot bivariate hex and univariate density plots for batches of samples, along
with their gates.
}
\examples{
\donttest{
plots <- plot_gate(
  ind = 20:22, # indices in `gs` to plot
  .data = gs, # GatingSet
  path_project = "/path/to/project",
  marker = c("marker1", "marker2"),
  ind_lab = c("20" = "Mtb", "21" = "PHA", "22" = "Unstim"),
  marker_lab = c("marker1" = "Nice Name 1", "marker2" = "Nice Name 2"),
  limits_expand = list(4),
  limits_equal = TRUE
)
}
}
